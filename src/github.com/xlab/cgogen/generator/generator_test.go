package generator

import (
	"bufio"
	"os"
	"testing"

	tl "github.com/xlab/cgogen/translator"
)

func TestTemplates(t *testing.T) {
	buf := bufio.NewWriter(os.Stdout)
	defer buf.Flush()
	tr, err := tl.New(nil, buf)
	if err != nil {
		t.Fatal(err)
	}
	cfg := &Config{
		PackageName:        "foo",
		PackageDescription: "Package foo provides methods for effective fooing.",
		PackageLicense:     "THE AUTOGENERATED LICENSE. ALL RIGHTS ARE RESERVED BY THE ROBOTS.",
		PkgConfigOpts:      []string{"foo"},
		CFlags: ArchFlagSet{
			Name:  "CFLAGS",
			Arch:  []string{"amd64", "386"},
			Flags: []string{"-Dfoo=1"},
		},
		SysIncludes: []string{"stdio.h", "stdlib.h"},
	}
	gen, err := New(cfg, tr)
	if err != nil {
		t.Fatal(err)
	}
	gen.WriteDoc(buf)
	gen.WriteIncludes(buf)
	gen.WritePackage(buf)
}
